#include <iostream>
using namespace std;
void main()
{
	setlocale(LC_ALL, "Rus"); // задаём локаль для использования русского языка
	float a, b,  c, p, s, r; // создаём переменные для двух чисел, их суммы , разности, произведения и частного их модулей
	cout << "Введите два числа не равные нулю: "; // предлагаем пользователю ввести два числа, не равные нулю
	cin >> a; // пользователь вводит первое число
	cin >> b; // второе
	if ((a == 0) or (b == 0)) // случай когда пользователь ввёл ноль
	{
		cout << "Число не должно равняться нулю"; // сообщаем пользователю,что число не должно равняться нулю
	}
	if ((a != 0) and (b != 0) and (abs(a) > abs(b))) // случай когда модуль первого числа больше модуля второго 
	{
		s = a + b; // считаем сумму чисел
		r = a - b; // разность
		p = a * b; // произведение
		c = abs(a) / abs(b);  // частное модулей
		cout << "Сумма равна: " << s << endl; // вывод суммы
		cout << "Разность равна: " << r << endl; // разности
		cout << "Произведение равно: " << p << endl; // произведения
		cout << "Частное модулей равно: " << c << endl; // частного модулей
	}
	if ((a != 0) and (b != 0) and (abs(b) > abs(a))) // случай когда модуль второго числа больше модуля второго
	{
		s = a + b; // считаем сумму 
		r = b - a; // разность
		p = a * b; // произведение 
		c = abs(b) / abs(a); // частное модулей
		cout << "Сумма равна: " << s << endl; // выводим на экран сумму 
		cout << "Разность равна: " << r << endl; // разность
		cout << "Произведение равно: " << p << endl; // произведение
		cout << "Частное модулей равно: " << c << endl; // частное модулей
	}
	if ((a != 0) and (b != 0) and (abs(a) == abs(b))) // случай когда модули чисел равны
	{
		s = a + b; // считаем сумму 
		r = a - b; // разность
		p = a * a; // произвдение
		c = 1; // частное модулей в этом случае равно единице
		cout << "Сумма равна: " << s << endl; // выводим на экран сумму 
		cout << "Разность равна: " << r << endl; // разность
		cout << "Произведение равно: " << p << endl; // произведение
		cout << "Частное модулей равно: " << c << endl; // частное модулей
		
	}
}
 


